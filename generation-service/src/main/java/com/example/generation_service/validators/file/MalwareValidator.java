package com.example.generation_service.validators.file;

import com.example.generation_service.models.user.UserFeature;
import com.example.generation_service.models.enums.UploadStatus;
import com.example.generation_service.services.user.UserFeatureService;
import com.example.generation_service.validators.file.dto.FileValidationDto;
import io.sensesecure.clamav4j.ClamAV;
import lombok.RequiredArgsConstructor;
import org.springframework.core.annotation.Order;
import org.springframework.stereotype.Component;

import java.util.Optional;

@Component
@RequiredArgsConstructor
@Order(4)
public class MalwareValidator implements FileValidator {

    private final UserFeatureService userFeatureService;
    private final ClamAV clamAV;

    @Override
    public FileValidationDto validate(FileValidationDto dto) {
        final boolean featureEnabled = Optional.ofNullable(dto.getUserId())
                .map(userFeatureService::getUserFeatures)
                .map(UserFeature::getAntivirusEnabled)
                .orElse(true);

        UploadStatus uploadStatus = UploadStatus.SUCCESS;
        if (featureEnabled) {
            try {
                final String result = clamAV.scan(dto.getFile().getInputStream());
                uploadStatus = mapStatus(result);
            } catch (final Exception e) {
                throw new RuntimeException("Error during malware check", e);
            }
        }

        dto.setUploadStatus(uploadStatus);
        return dto;
    }

    private UploadStatus mapStatus(final String status) {
        if (status == null) {
            return UploadStatus.FAILED;
        }

        return status.equals("OK") ? UploadStatus.SUCCESS : UploadStatus.MALWARE;
    }
}
