// PrintTest.tsx
import React, { useRef } from 'react';
import { TestPrint } from './TestPrint';
import { Box } from '@mui/material';
import TestPrintActions from "./print/TestPrintActions";
import {LoggedInUserPage} from "../../components/main/LoggedInUserPage";

const test = {
    title: "Тест по многопоточности в Java",
    questions: [
        {
            id: 52,
            questionText: "Что такое поток (thread) в Java, и какие преимущества многопоточности в сравнении с однопоточными приложениями?",
            answerOptions: [
                {
                    id: 97,
                    optionText: "Поток - это процесс внутри операционной системы. Преимущества многопоточности включают меньший расход памяти и возможность более простой отладки.",
                    isCorrect: false
                },
                {
                    id: 98,
                    optionText: "Поток - это класс в Java, предназначенный для синхронизации операций. Преимущества многопоточности включают сокращение количества кода.",
                    isCorrect: false
                },
                {
                    id: 99,
                    optionText: "Поток - это независимая линия выполнения в рамках процесса. Преимущества многопоточности включают более эффективное использование ресурсов процессора, увеличение отзывчивости приложения и возможность выполнять параллельные задачи.",
                    isCorrect: true
                }
            ]
        },
        {
            id: 53,
            questionText: "Что такое поток (thread) в Java, и какие преимущества многопоточности в сравнении с однопоточными приложениями?",
            answerOptions: [
                {
                    id: 101,
                    optionText: "Поток - это независимая линия выполнения в рамках процесса. Преимущества многопоточности включают более эффективное использование ресурсов процессора, увеличение отзывчивости приложения и возможность выполнять параллельные задачи.",
                    isCorrect: true
                },
                {
                    id: 100,
                    optionText: "Поток - это класс в Java, предназначенный для синхронизации операций. Преимущества многопоточности включают сокращение количества кода.",
                    isCorrect: false
                },
                {
                    id: 102,
                    optionText: "Поток - это процесс внутри операционной системы. Преимущества многопоточности включают меньший расход памяти и возможность более простой отладки.",
                    isCorrect: false
                }
            ]
        },
        {
            id: 52,
            questionText: "Что такое поток (thread) в Java, и какие преимущества многопоточности в сравнении с однопоточными приложениями?",
            answerOptions: [
                {
                    id: 97,
                    optionText: "Поток - это процесс внутри операционной системы. Преимущества многопоточности включают меньший расход памяти и возможность более простой отладки.",
                    isCorrect: false
                },
                {
                    id: 98,
                    optionText: "Поток - это класс в Java, предназначенный для синхронизации операций. Преимущества многопоточности включают сокращение количества кода.",
                    isCorrect: false
                },
                {
                    id: 99,
                    optionText: "Поток - это независимая линия выполнения в рамках процесса. Преимущества многопоточности включают более эффективное использование ресурсов процессора, увеличение отзывчивости приложения и возможность выполнять параллельные задачи.",
                    isCorrect: true
                }
            ]
        },
        {
            id: 53,
            questionText: "Что такое поток (thread) в Java, и какие преимущества многопоточности в сравнении с однопоточными приложениями?",
            answerOptions: [
                {
                    id: 101,
                    optionText: "Поток - это независимая линия выполнения в рамках процесса. Преимущества многопоточности включают более эффективное использование ресурсов процессора, увеличение отзывчивости приложения и возможность выполнять параллельные задачи.",
                    isCorrect: true
                },
                {
                    id: 100,
                    optionText: "Поток - это класс в Java, предназначенный для синхронизации операций. Преимущества многопоточности включают сокращение количества кода.",
                    isCorrect: false
                },
                {
                    id: 102,
                    optionText: "Поток - это процесс внутри операционной системы. Преимущества многопоточности включают меньший расход памяти и возможность более простой отладки.",
                    isCorrect: false
                }
            ]
        }
    ]
};

const PrintTestContent: React.FC = () => {
    const componentRef = useRef<HTMLDivElement>(null);

    return (
        <Box display="flex">
            <Box ref={componentRef} flexGrow={0.8}>
                <TestPrint test={test} />
            </Box>
            <Box>
                <TestPrintActions printRef={componentRef} />
            </Box>
        </Box>
    );
};

export const PrintTest = () => {
    return (
        <>
        <LoggedInUserPage mainContent={<PrintTestContent/>}/>
        </>
    )
};
